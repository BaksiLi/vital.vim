*vital-lazy_list.txt*	lazy list including file io.

Maintainer: ujihisa <ujihisa at gmail com>

==============================================================================
CONTENTS			*Vital.Data.LazyList-contents*

INTRODUCTION			|Vital.Data.LazyList-introduction|
  USAGE				|Vital.Data.LazyList-usage|
INTERFACE			|Vital.Data.LazyList-interface|
  FUNCTIONS			  |Vital.Data.LazyList-functions|
CONFIG				|Vital.Data.LazyList-config|



==============================================================================
INTRODUCTION			*Vital.Data.LazyList-introduction*

*Vital.Data.LazyList* is TODO

==============================================================================
USAGE				*Vital.Data.LazyList-usage*
>
	let xs = s:L.file_readlines('/tmp/a.txt')
	let xs = s:L.map(xs, 'split(v:val, ":")')
	let xs = s:L.filter(xs, 'v:val[1] < 3')
	echo s:L.take(3, xs)
<

==============================================================================
INTERFACE			*Vital.Data.LazyList-interface*

------------------------------------------------------------------------------
FUNCTIONS			*Vital.Data.LazyList-functions*

from_list({list})		*Vital.Data.LazyList.from_list()*
	Constructs lazy list based on given |List| {list}.

iterate({init}, {f})		*Vital.Data.LazyList.iterate()*
	Constructs lazy list based on given initial value {init} and a
	function {f} to make new item of lazy list based on previous value,
	described in |String|.
>
	L.take(3, L.iterate(0, 'v:val + 1')) == [0, 1, 2]

	L.take(3, L.filter(L.iterate(0, 'v:val + 1'), 'v:val % 2 == 0'))
	\ == [0, 2, 4]
<

file_readlines({fname})		*Vital.Data.LazyList.file_readlines()*
	Constructs lazy list based on given filename |String| {fname}.
	This function requires |vimproc|.

	For example, the following line of code will read first 4 lines from
	the given file "/tmp/a.txt".
>
	L.take(4, L.file_readlines('/tmp/a.txt'))
<

take({n}, {xs})			*Vital.Data.LazyList.take()*
	De-constructs from lazy list {xs} to |List|, but the length will be at
	most {n}.
	See other functions such as |Vital.Data.LazyList.iterate()| for sample
	use case.

	You may get confused by the order of arguments, but it's on purpose.

==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
