*vital-data-ordered_set.txt*		ordered collection library.

Author:
  tyru <tyru.exe@gmail.com>
Version: 0.0.0
License: Under the same license as Vim itself (see :help license)

==============================================================================
CONTENTS				*Vital.Data.Ordered_set-contents*

INTRODUCTION			|Vital.Data.Ordered_set-introduction|
INTERFACE			|Vital.Data.Ordered_set-interface|
  Functions			  |Vital.Data.Ordered_set-functions|
  Ordered_set Object		  |Vital.Data.Ordered_set-Ordered_set|
CHANGELOG			|Vital.Data.Ordered_set-changelog|


==============================================================================
INTRODUCTION				*Vital.Data.Ordered_set-introduction*

|Vital.Data.Ordered_set| is Collection Utilities Library.
It provides some data structure (e.g., ordered dictionary/set).

==============================================================================
INTERFACE				*Vital.Data.Ordered_set-interface*
------------------------------------------------------------------------------
FUNCTIONS				*Vital.Data.Ordered_set-functions*

load()				*Vital.Data.Ordered_set.load()*
	Loads autoload/vital#data/ordered_set.vim .

new()				*Vital.Data.Ordered_set.new()*
	Returns 'Ordered_set' object.

------------------------------------------------------------------------------
Ordered_set Object		*Vital.Data.Ordered_set-Ordered_set*

ordered_set.push({elem})	*Vital.Data.Ordered_set-Ordered_set.push()*
	Pushes an element to data.ordered_set.
	This adds the element to set.
	But if the element exists in the set,
	it does not adds the element.

ordered_set.unshift({elem})	*Vital.Data.Ordered_set-Ordered_set.unshift()*
	Unshifts an element to data.ordered_set.
	This adds the element to set.
	But if the element exists in the set,
	it does not adds the element.

ordered_set.size({elem})	*Vital.Data.Ordered_set-Ordered_set.size()*
	Gets the number of elements in data.ordered_set.

ordered_set.to_list({elem})	*Vital.Data.Ordered_set-Ordered_set.to_list()*
	Converts to |List|.

data.ordered_set.has({elem})	*Vital.Data.Ordered_set-Ordered_set.has()*
	Checks if there is the element in data.ordered_set.
	This returns boolean value.

ordered_set.has_id({id})	*Vital.Data.Ordered_set-Ordered_set.has_id()*
	Checks if there is the element which has {id} in data.ordered_set.
	This returns boolean value.

ordered_set.clear()		*Vital.Data.Ordered_set-Ordered_set.clear()*
	Initializes data.ordered_set.
	After calling this, data.ordered_set has no elements.

ordered_set.remove({elem})	*Vital.Data.Ordered_set-Ordered_set.remove()*
	Remove {elem} from data.ordered_set if it exists.
	If it does not exist, this does not do anything.

==============================================================================
CHANGELOG				*Vital.Data.Ordered_set-changelog*

0.0.0:
- Initial upload

==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
