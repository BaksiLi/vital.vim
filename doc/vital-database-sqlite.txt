*vital-database-string.txt*		string utilities library.

==============================================================================
CONTENTS				*Vital.Database.Sqlite-contents*

INTRODUCTION			|Vital.Database.Sqlite-introduction|
PRINCIPLE			|Vital.Database.Sqlite-principle|
EXAMPLES			|Vital.Database.Sqlite-examples|
fUNCTIONS			|Vital.Database.Sqlite-functions|

==============================================================================
INTRODUCTION				*Vital.Database.Sqlite-introduction*

*Vital.Database.Sqlite* is Sqlite Utilities Library.
It provides some functions to manipulate |Sqlite|.

==============================================================================
PRINCIPLE				*Vital.Database.Sqlite-principle*

|Vital.Database.Sqlite| won't provide ORM but provides safe query and result
parser. ORM is a wrong way of abstracting relational database.

|Vital.Database.Sqlite| is
* not an object that wraps something fancy.
* not sqlite itself but a bridge to use a sqlite implementation.
* encouraging you to write a good SQL query.
* helping you to investigate what's going on by debug functions.

==============================================================================
EXAMPLES				*Vital.Database.Sqlite-examples*

>
	let s:S = s:V.import('Database.Sqlite')
	if !s:S.is_available()
	  return 'failed'
	endif
	echo s:S.query(
	      \ 'a.db',
	      \ 'CREATE TABLE cities (name varchar(80), country_name text);')
	echo s:S.query(
	      \ 'a.db',
	      \ 'INSERT INTO cities VALUES (?, ?);',
	      \ 'Vancouver', 'Canada')
	echo s:S.query(
	      \ 'a.db',
	      \ 'SELECT * FROM cities WHERE name = ?;',
	      \ 'Vancouver')
<

==============================================================================
FUNCTIONS				*Vital.Database.Sqlite-functions*

is_available()		*Vital.Database.Sqlite.is_available()*
	1 if you can use this sqlite integration feature by checking if you
	have sqlite3 command.
>
	:echo S.is_available()
	1
<

==============================================================================
vim:tw=78:fo=tcq2mM:ts=8:ft=help:norl
