Describe DateTime
  Before all
    let DT = vital#of('vital').import('DateTime')
  End

  Context .from_unix_time()
    It makes a DateTime object from unix time
      let dt = DT.from_unix_time(1325441045, 9)
      Assert Equals(dt.year(), 2012)
      Assert Equals(dt.month(), 1)
      Assert Equals(dt.day(), 2)
      Assert Equals(dt.hour(), 3)
      Assert Equals(dt.minute(), 4)
      Assert Equals(dt.second(), 5)
    End
  End

  Describe .from_format()
    It makes a DateTime object from formatted string
      let dt = DT.from_format('2012-1-02T03:04:05Z', '%Y-%m-%dT%H:%M:%SZ%z')
      Assert Equals(dt.year(), 2012)
      Assert Equals(dt.month(), 1)
      Assert Equals(dt.day(), 2)
      Assert Equals(dt.hour(), 3)
      Assert Equals(dt.minute(), 4)
      Assert Equals(dt.second(), 5)
      Assert Equals(dt.timezone().offset(), 0)
    End
    It can treat the some format specifier
      let dt = DT.from_format('02 Jan 2012 03:04:05 +0900', '%d %b %Y%n%H:%M:%S%n%z', 'C')
      Assert Equals(dt.year(), 2012)
      Assert Equals(dt.month(), 1)
      Assert Equals(dt.day(), 2)
      Assert Equals(dt.hour(), 3)
      Assert Equals(dt.minute(), 4)
      Assert Equals(dt.second(), 5)
      Assert Equals(dt.timezone().hours(), 9)
    End
    It can skip any text by %*
      let dt = DT.from_format('2011-01-03T10:16:46.297581Z', '%Y-%m-%dT%H:%M:%S%*Z%z', 'C')
      Assert Equals(dt.year(), 2011)
      Assert Equals(dt.month(), 1)
      Assert Equals(dt.day(), 3)
      Assert Equals(dt.hour(), 10)
      Assert Equals(dt.minute(), 16)
      Assert Equals(dt.second(), 46)
      Assert Equals(dt.timezone().hours(), 0)
    End
  End

  Describe .from_julian_day()
    It makes a DateTime object from string
      let dt = DT.from_julian_day(2455928.627836, 0)
      Assert Equals(dt.year(), 2012)
      Assert Equals(dt.month(), 1)
      Assert Equals(dt.day(), 2)
      Assert Equals(dt.hour(), 3)
      Assert Equals(dt.minute(), 4)
      Assert Equals(dt.second(), 5)
    End
  End

  Describe DateTime.TimeDelta
    Before each
      let dt1 = DT.from_format('2012-01-02 00:00:00', '%Y-%m-%d %H:%M:%S')
      let dt2 = DT.from_format('2012-01-02 03:04:05', '%Y-%m-%d %H:%M:%S')
      let delta = dt2['-'](dt1)
    End

    It is a TimeDelta object
      Assert Equals(delta.days(), 0)
      Assert Equals(delta.hours(), 3)
      Assert Equals(delta.minutes(), 184)
      Assert Equals(delta.seconds(), 11045)
    End
  End
End
